syntax = "proto3";

package raftpb;

// Example RequestVote RPC arguments structure.
message RequestVoteArgs {
  // Your data here (2A, 2B).
  uint64 term = 1;           // candiate's term
  uint64 cid = 2;            // candidate's id
  uint64 last_log_index = 3; // index of the candidate's last log entry
  uint64 last_log_term = 4;  // term of candidate's last log entry
}

// Example RequestVote RPC reply structure.
message RequestVoteReply {
  // Your data here (2A).
  uint64 term = 1;  // currentTerm of the receiver
  bool granted = 2; // true -> candidate receives vote, false -> refuse to vote
}

message LogEntry {
  uint64 term = 1;
  bytes rb = 2;
}

message AppendEntriesArgs {
  // leader's term
  uint64 term = 1;
  // leader's id
  uint64 leader_id = 2;
  // leader's last commit log index
  uint64 leader_commit = 3;
  // the term of entry corresponds to prev_log_index
  uint64 prev_log_term = 4;
  // index of log entry immediately preceding the new ones
  uint64 prev_log_index = 5;
  // data
  repeated LogEntry log_entries = 6;
}

message AppendEntriesReply {
  // my term, for leader to update
  uint64 term = 1;
  // true if follower contains entry matching prev_log_index and prev_log_term
  bool success = 2;
  uint64 conflict_index = 3;
}
